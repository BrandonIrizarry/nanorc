local lfs = require "lfs"

setmetatable(_ENV, {__index = function (_, nonexistent)
	print(nonexistent, "does not exist")
	os.exit()
end})

local tests = {
	["BasicLoop.vm"] = {prefix = "", rest = "BasicLoop.vm"},
	["../ProgramFlow/BasicLoop.vm"] = {prefix = "../ProgramFlow/", rest = "BasicLoop.vm"},
	NestedCall = {prefix = "", rest = "NestedCall"},
	["NestedCall/"] = {prefix = "", rest = "NestedCall/"},
	["../FunctionCalls/NestedCall/"] = {prefix = "../FunctionCalls/", rest = "NestedCall"},
	["../FunctionCalls/NestedCall"] = {prefix = "../FunctionCalls/", rest = "NestedCall"}
}

local BASENAME_PATTERN = "(.-/?)([^/]+)/?$"

for test, should in pairs(tests) do
	local prefix, rest = test:match(BASENAME_PATTERN)

	print(test)
	print("prefix=", prefix, "rest=", rest)
--	assert(prefix == should.prefix)
--	assert(rest == should.rest)
end
