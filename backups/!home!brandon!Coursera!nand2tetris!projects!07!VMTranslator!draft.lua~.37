local filename = "draft" -- original filename was 'draft.vm'

local mt_const = setmetatable({}, {__index = function (_, arg)
	local template = [[

// push constant %s
@%s
D=A
@SP
A=M
M=D
@SP
M=M+1]]

	return string.format(template, arg, arg)
end})

local mt_static = setmetatable({}, {__index = function (_, arg)
	local template = [[

// push static %s
@%s.%s
D=M
@SP
A=M
M=D
@SP
M=M+1]]

	return string.format(template, arg, filename, arg)
end})

do -- pointer and temp share a template
	local template = [[
@%s
D=M
@SP
A=M
M=D
@SP
M=M+1
]]

	local mt_pointer = setmetatable({}, {__index = function (_, arg)
		local resolve = {
			["0"] = "THIS",
			["1"] = "THAT"
		}

		template = string.format("\n// push pointer %s\n", arg)..template
		return string.format(template, resolve[arg])
	end})

	local mt_temp = setmetatable({}, {__index = function (_, arg)
		local resolve = {
			["0"] = "R5",
			["1"] = "R6",
			["2"] = "R7",
			["3"] = "R8",
			["4"] = "R9",
			["5"] = "R10",
			["6"] = "R11",
			["7"] = "R12"
		}

		template = string.format("\n// push pointer %s\n", arg)..template
		return string.format(template, resolve[arg])
	end})
end

local commands = {
	["push"] = {
		["constant"] = mt_const,
		["static"] = mt_static,
		["pointer"] = mt_pointer,
		["temp"] = mt_temp,
		["local"] = true,
		["argument"] = true,
		["this"] = true,
		["that"] = true
	},
	["pop"] = {
		["constant"] = true,
		["static"] = true,
		["pointer"] = true,
		["temp"] = true,
		["local"] = true,
		["argument"] = true,
		["this"] = true,
		["that"] = true
	},
	["add"] = true,
	["and"] = true,
	["or"] = true,
	["neg"] = true,
	["sub"] = true,
	["not"] = true,
	["eq"] = true,
	["gt"] = true,
	["lt"] = true
}

--print(commands["and"])

--print(type(commands["add"]))
--print(type(commands["push"]))
--print(commands["push"]["constant"]["3"])
--print(commands["push"]["constant"]["12"])
--print(commands["push"]["static"]["5"])
print(commands["push"]["pointer"]["0"])
