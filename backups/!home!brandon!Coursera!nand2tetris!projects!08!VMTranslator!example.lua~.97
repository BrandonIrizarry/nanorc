local lfs = require "lfs"

setmetatable(_ENV, {__index = function (_, nonexistent)
	print(nonexistent, "does not exist")
	os.exit()
end})

local tests = {
	["BasicLoop.vm"] = {
		prefix = "",
		realname = "BasicLoop",
		extension = "vm"
	},

	["../ProgramFlow/BasicLoop.vm"] = {
		prefix = "../ProgramFlow/",
		realname = "BasicLoop",
		extension = "vm"
	},

	NestedCall = {
		prefix = "",
		realname = "NestedCall",
		extension = ""
	},

	["NestedCall/"] = {
		prefix = "",
		realname = "NestedCall",
		extension = ""
	},

	["../FunctionCalls/NestedCall/"] = {
		prefix = "../FunctionCalls/",
		realname = "NestedCall",
		extension = ""
	},

	["../FunctionCalls/NestedCall"] = {
		prefix = "../FunctionCalls/",
		realname = "NestedCall",
		extension = ""
	}
}

local BASENAME_PATTERN = "(.-/?)([^/]+)/?$"

local function parse_cli_input (input)
	local prefix, rest = input:match(BASENAME_PATTERN)

	local realname, extension = rest:match("%.([^.]+)$")

	return prefix, realname, extension
end

for test, should in pairs(tests) do
	local prefix, realname, extension = parse_cli_input(test)

	print(test)
	print("prefix=", prefix, "realname=", realname, "extension=", extension)
	print()
	assert(prefix == should.prefix)
	assert(realname == should.realname)
	assert(extension == should.extension)
end
