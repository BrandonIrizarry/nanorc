return {
	PUSH_CONSTANT = [[
@%s
D=A
@SP
A=M
M=D
@SP
M=M+1
]],
	PUSH_FIXED = [[
@%s
D=M
@SP
A=M
M=D
@SP
M=M+1
]],
	PUSH_VARIABLE = [[
@%s
D=A
@%s
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
]],
	POP_FIXED = [[
@SP
M=M-1
A=M
D=M
@%s
M=D
]],
	POP_VARIABLE = [[
@%s
D=A
@%s
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
]],
	ADD = [[
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
]],

	["and"] = "@SP M=M-1 A=M D=M A=A-1 M=D&M ",
	["or"] = "@SP M=M-1 A=M D=M A=A-1 M=D|M ",
	neg = "@SP A=M-1 M=-M ",
	sub = "@SP M=M-1 A=M D=M A=A-1 M=M-D ",
	["not"] = "@SP A=M-1 M=!M ",

	-- 'Incomplete' commands
	["eq"] = "@SP M=M-1 A=M D=M A=A-1 M=M-D ".. -- code for 'sub'
		"@SP A=M-1 D=M M=-1 @~F$eq.~I D;JEQ @SP A=M-1 M=0 (~F$eq.~I) ",

	["lt"] = "@SP M=M-1 A=M D=M A=A-1 M=M-D ".. -- code for 'sub'
		"@SP A=M-1 D=M M=-1 @~F$lt.~I D;JLT @SP A=M-1 M=0 (~F$lt.~I) ",

	["gt"] = "@SP M=M-1 A=M D=M A=A-1 M=M-D ".. -- code for 'sub'
		"@SP A=M-1 D=M M=-1 @~F$gt.~I D;JGT @SP A=M-1 M=0 (~F$gt.~I) "
 = "@SP M=M-1 A=M D=M A=A-1 M=D+M ",

	VMCOMMAND_PATTERN = "[:%.$_%w]+",
}
